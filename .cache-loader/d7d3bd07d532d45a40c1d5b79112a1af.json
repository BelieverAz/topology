{"remainingRequest":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/thread-loader/dist/cjs.js??ref--6-oneOf-1-1!/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-loader/lib/index.js??ref--6-oneOf-1-2!/Users/zhangtengjin/Desktop/byai/topology/node_modules/eslint-loader/index.js??ref--5-0!/Users/zhangtengjin/Desktop/byai/topology/src/lib/components/node-wrapper/index.tsx","dependencies":[{"path":"/Users/zhangtengjin/Desktop/byai/topology/src/lib/components/node-wrapper/index.tsx","mtime":1647506177145},{"path":"/Users/zhangtengjin/Desktop/byai/topology/package.json","mtime":1647506605470},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/cache-loader/dist/cjs.js","mtime":1645756501487},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/thread-loader/dist/cjs.js","mtime":1645756504722},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-loader/lib/index.js","mtime":1641784542889},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/eslint-loader/index.js","mtime":1643179601592}],"contextDependencies":[],"result":["import _objectSpread from\"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";import _classCallCheck from\"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _possibleConstructorReturn from\"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from'react';import{DragSource}from'react-dnd';import classnames from'classnames';import AnchorWrapper from'../anchor-wrapper';import{Consumer}from'../context';import{NodeTypes}from'../../declare';import'./index.less';import{SelectMode}from'../../utils/selectNodes';import{isMatchKeyValue}from'../../utils';import config from'../../config';// @ts-ignore\nvar NodeWrapper=/*#__PURE__*/function(_React$Component){_inherits(NodeWrapper,_React$Component);var _super=_createSuper(NodeWrapper);function NodeWrapper(){var _this;_classCallCheck(this,NodeWrapper);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.increaseAnchorId=0;_this.computeStyle=function(){var _this$props=_this.props,data=_this$props.data,isolated=_this$props.isolated;if(!data){return undefined;}data.position=data.position||{x:0,y:0};return{position:'absolute',left:data.position.x,top:data.position.y,transition:config.transition,zIndex:isolated?999:undefined};};_this.anchorDecorator=function(options){var _this$props2=_this.props,id=_this$props2.id,readOnly=_this$props2.readOnly;var anchorId=options.anchorId||(_this.increaseAnchorId+=1);return function(item){return/*#__PURE__*/React.createElement(AnchorWrapper,{key:\"\".concat(id,\"-\").concat(anchorId),id:\"\".concat(id,\"-\").concat(anchorId),readOnly:readOnly},item);};};_this.impactCheck=function(){var _this$props3=_this.props,context=_this$props3.context,data=_this$props3.data,id=_this$props3.id;var _ref=context,activeLine=_ref.activeLine,impactNode=_ref.impactNode;if(!activeLine||!data||!id){return false;}return id===impactNode;};_this.handleClick=function(e){var _this$props4=_this.props,onSelect=_this$props4.onSelect,data=_this$props4.data;if((e.ctrlKey||e.metaKey)&&e.shiftKey){onSelect(data,SelectMode.MULTI);return;}if(e.ctrlKey||e.metaKey){onSelect(data,SelectMode.MUL_NORMAL);return;}onSelect(data,SelectMode.NORMAL);};_this.handleMouseDown=function(e){if(e.button===2){e.preventDefault();var _this$props5=_this.props,data=_this$props5.data,onSelect=_this$props5.onSelect;onSelect(data,SelectMode.RIGHT_NORMAL);}};_this.handleRightClick=function(e){e.preventDefault();};_this.getPreviewNodeStyle=function(){var _this$props6=_this.props,data=_this$props6.data,scaleNum=_this$props6.scaleNum,id=_this$props6.id,draggingId=_this$props6.draggingId;var realNodeDom=document.getElementById(\"topology-node-\".concat(data&&data.id));if(!realNodeDom)return null;var previewNodeWidth=scaleNum*realNodeDom.offsetWidth-2;// border\nvar previewNodeHeight=scaleNum*realNodeDom.offsetHeight-2;var previewStyle;// 放大模式下拖动中 previewNode 样式处理\nif(scaleNum>1&&draggingId===id){var draggingPreviewNode=document.querySelector(\"div[data-id='\".concat(draggingId,\"']\"));if(!draggingPreviewNode)return;setTimeout(function(){draggingPreviewNode.style.background='transparent';draggingPreviewNode.style.border='none';},0);}// 连线触发节点或者放大时对未拖动中 previewNode 样式处理\nif(_this.impactCheck()||scaleNum>1&&draggingId!==id){previewStyle={background:'transparent',border:'none'};}return _objectSpread({width:previewNodeWidth,height:previewNodeHeight},previewStyle);};return _this;}_createClass(NodeWrapper,[{key:\"render\",value:function render(){var _this$props7=this.props,connectDragSource=_this$props7.connectDragSource,connectDragPreview=_this$props7.connectDragPreview,children=_this$props7.children,data=_this$props7.data,context=_this$props7.context,id=_this$props7.id,_onMouseEnter=_this$props7.onMouseEnter,_onMouseLeave=_this$props7.onMouseLeave;var selectedData=context.selectedData,activeLine=context.activeLine;var isSelected=selectedData.nodes.find(function(item){return item.id===data.id;})!==undefined;return connectDragSource(/*#__PURE__*/React.createElement(\"div\",{id:data?\"topology-node-\".concat(data.id):\"\",style:this.computeStyle(),className:\"byai-topology-node-wrapper\",onClick:this.handleClick,onContextMenu:this.handleRightClick,onMouseDown:this.handleMouseDown,onMouseEnter:function onMouseEnter(){_onMouseEnter(data);},onMouseLeave:function onMouseLeave(){_onMouseLeave();}},connectDragPreview(/*#__PURE__*/React.createElement(\"div\",{\"data-id\":\"\".concat(id),style:this.getPreviewNodeStyle(),className:\"topology-node-preview\"})),/*#__PURE__*/React.createElement(\"div\",{className:classnames({\"topology-node-content\":true,\"topology-node-selected\":isSelected,\"topology-node-impact\":activeLine&&this.impactCheck()})},children({anchorDecorator:this.anchorDecorator}))));}}]);return NodeWrapper;}(React.Component);var WithContextNodeWrapper=function WithContextNodeWrapper(props){return/*#__PURE__*/React.createElement(Consumer,null,function(context){return/*#__PURE__*/React.createElement(NodeWrapper,Object.assign({},props,{context:context}));});};export default DragSource(NodeTypes.NORMAL_NODE,{canDrag:function canDrag(props){var canDragNode=props.canDrag===false||isMatchKeyValue(props,'canDrag',false);return canDragNode?!canDragNode:props.readOnly?!props.readOnly:!canDragNode;},beginDrag:function beginDrag(props){var id=props.data?props.data.id:null;props.setDraggingId(id);return{id:id};},endDrag:function endDrag(props){props.setDraggingId(null);}},function(connect){return{connectDragSource:connect.dragSource(),connectDragPreview:connect.dragPreview()};})(WithContextNodeWrapper);",{"version":3,"sources":["/Users/zhangtengjin/Desktop/byai/topology/src/lib/components/node-wrapper/index.tsx"],"names":["React","DragSource","classnames","AnchorWrapper","Consumer","NodeTypes","SelectMode","isMatchKeyValue","config","NodeWrapper","increaseAnchorId","computeStyle","props","data","isolated","undefined","position","x","y","left","top","transition","zIndex","anchorDecorator","options","id","readOnly","anchorId","item","impactCheck","context","activeLine","impactNode","handleClick","e","onSelect","ctrlKey","metaKey","shiftKey","MULTI","MUL_NORMAL","NORMAL","handleMouseDown","button","preventDefault","RIGHT_NORMAL","handleRightClick","getPreviewNodeStyle","scaleNum","draggingId","realNodeDom","document","getElementById","previewNodeWidth","offsetWidth","previewNodeHeight","offsetHeight","previewStyle","draggingPreviewNode","querySelector","setTimeout","style","background","border","width","height","connectDragSource","connectDragPreview","children","onMouseEnter","onMouseLeave","selectedData","isSelected","nodes","find","Component","WithContextNodeWrapper","NORMAL_NODE","canDrag","canDragNode","beginDrag","setDraggingId","endDrag","connect","dragSource","dragPreview"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DragSource, DragElementWrapper } from 'react-dnd';\nimport classnames from 'classnames';\nimport { JsxElement } from 'typescript';\nimport AnchorWrapper from '../anchor-wrapper';\nimport { Consumer } from '../context';\nimport {\n    NodeTypes,\n    ITopologyContext,\n    ITopologyNode,\n    IWrapperOptions,\n} from '../../declare';\nimport './index.less';\nimport { SelectMode } from '../../utils/selectNodes';\nimport {\n    isMatchKeyValue\n} from '../../utils';\nimport config from '../../config';\n\n// @ts-ignore\nexport interface INodeWrapperProps {\n    id?: string;\n    data?: ITopologyNode;\n    scaleNum?: number;\n    draggingId?: string;\n    context?: ITopologyContext;\n    setDraggingId?: (id: string) => void;\n    onSelect: (node: ITopologyNode, mode: SelectMode) => void;\n    children: (wrapperOptions: IWrapperOptions) => React.ReactNode;\n    onMouseEnter?: (node: ITopologyNode) => void;\n    onMouseLeave?: () => void;\n    readOnly?: boolean;\n    canDrag?: boolean;\n    filterOverlap?: boolean;\n    /** 是否孤立节点 */\n    isolated?: boolean;\n    connectDragSource?: DragElementWrapper<React.ReactNode>;\n    connectDragPreview?: DragElementWrapper<React.ReactNode>;\n}\n\nclass NodeWrapper extends React.Component<INodeWrapperProps> {\n    /** 锚点自增id */\n    private increaseAnchorId: number = 0;\n\n    computeStyle = () => {\n        const { data, isolated } = this.props;\n        if (!data) {\n            return undefined;\n        }\n        data.position = data.position || { x: 0, y: 0 };\n        return {\n            position: 'absolute',\n            left: data.position.x,\n            top: data.position.y,\n            transition: config.transition,\n            zIndex: isolated ? 999 : undefined,\n        } as React.CSSProperties;\n    };\n\n    anchorDecorator = (options: { anchorId?: string }) => {\n        const { id, readOnly } = this.props;\n        const anchorId = options.anchorId || (this.increaseAnchorId += 1);\n        return (item: JsxElement) => (\n            <AnchorWrapper\n                key={`${id}-${anchorId}`}\n                id={`${id}-${anchorId}`}\n                readOnly={readOnly}\n            >\n                {item}\n            </AnchorWrapper>\n        );\n    };\n\n    impactCheck = () => {\n        const { context, data, id } = this.props;\n        const { activeLine, impactNode } = context as ITopologyContext;\n        if (!activeLine || !data || !id) {\n            return false;\n        }\n        return id === impactNode;\n    };\n\n    handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        const { onSelect, data } = this.props;\n        if ((e.ctrlKey || e.metaKey) && e.shiftKey) {\n            onSelect(data, SelectMode.MULTI);\n            return;\n        }\n        if (e.ctrlKey || e.metaKey) {\n            onSelect(data, SelectMode.MUL_NORMAL);\n            return;\n        }\n        onSelect(data, SelectMode.NORMAL);\n    };\n\n    handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        if (e.button === 2) {\n            e.preventDefault();\n            const { data, onSelect } = this.props;\n            onSelect(data, SelectMode.RIGHT_NORMAL);\n        }\n    };\n\n    handleRightClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        e.preventDefault();\n    };\n\n    /**\n     * set preview Dom width height style\n     */\n    /* eslint-disable */\n    getPreviewNodeStyle = () => {\n        const { data, scaleNum, id, draggingId } = this.props;\n        const realNodeDom = document.getElementById(`topology-node-${data && data.id}`);\n        if (!realNodeDom) return null;\n        const previewNodeWidth = scaleNum * realNodeDom.offsetWidth - 2; // border\n        const previewNodeHeight = scaleNum * realNodeDom.offsetHeight - 2;\n        let previewStyle;\n        // 放大模式下拖动中 previewNode 样式处理\n        if (scaleNum > 1 && draggingId === id) {\n            const draggingPreviewNode: HTMLElement = document.querySelector(`div[data-id='${draggingId}']`);\n            if (!draggingPreviewNode) return;\n            setTimeout(() => {\n                draggingPreviewNode.style.background = 'transparent';\n                draggingPreviewNode.style.border = 'none';\n            }, 0);\n        }\n        // 连线触发节点或者放大时对未拖动中 previewNode 样式处理\n        if(this.impactCheck() || (scaleNum > 1 && draggingId !== id)) {\n            previewStyle = {\n                background: 'transparent',\n                border: 'none'\n            }\n        }\n        return {\n            width: previewNodeWidth,\n            height: previewNodeHeight,\n            ...previewStyle\n        };\n    };\n\n    render() {\n        const {\n            connectDragSource,\n            connectDragPreview,\n            children,\n            data,\n            context,\n            id,\n            onMouseEnter,\n            onMouseLeave\n        } = this.props;\n        const { selectedData, activeLine } = context;\n        const isSelected =\n            selectedData.nodes.find(item => item.id === data.id) !== undefined;\n        return connectDragSource(\n            <div\n                id={data ? `topology-node-${data.id}` : \"\"}\n                style={this.computeStyle()}\n                className=\"byai-topology-node-wrapper\"\n                onClick={this.handleClick}\n                onContextMenu={this.handleRightClick}\n                onMouseDown={this.handleMouseDown}\n                onMouseEnter={() => { onMouseEnter(data) }}\n                onMouseLeave={() => { onMouseLeave() }}\n            >\n                {connectDragPreview(\n                    <div\n                        data-id={`${id}`}\n                        style={this.getPreviewNodeStyle()}\n                        className=\"topology-node-preview\"\n                    />\n                )}\n                <div\n                    className={classnames({\n                        \"topology-node-content\": true,\n                        \"topology-node-selected\": isSelected,\n                        \"topology-node-impact\": activeLine && this.impactCheck()\n                    })}\n                >\n                    {children({ anchorDecorator: this.anchorDecorator })}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst WithContextNodeWrapper = (props: INodeWrapperProps) => (\n    <Consumer>\n        {context => <NodeWrapper {...props} context={context} />}\n    </Consumer>\n);\n\nexport default DragSource(\n    NodeTypes.NORMAL_NODE,\n    {\n        canDrag(props: INodeWrapperProps) {\n            const canDragNode = props.canDrag === false || isMatchKeyValue(props, 'canDrag', false);\n            return canDragNode ? !canDragNode : (props.readOnly ? !props.readOnly: !canDragNode);\n        },\n        beginDrag(props: INodeWrapperProps) {\n            const id = props.data ? props.data.id : null\n            props.setDraggingId(id);\n            return { id };\n        },\n        endDrag(props: INodeWrapperProps) {\n            props.setDraggingId(null);\n        },\n    },\n    connect => ({\n        connectDragSource: connect.dragSource(),\n        connectDragPreview: connect.dragPreview(),\n    }),\n)(WithContextNodeWrapper);\n"]}]}