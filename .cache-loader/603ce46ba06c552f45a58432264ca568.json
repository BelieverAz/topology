{"remainingRequest":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/thread-loader/dist/cjs.js??ref--6-oneOf-1-1!/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-loader/lib/index.js??ref--6-oneOf-1-2!/Users/zhangtengjin/Desktop/byai/topology/node_modules/eslint-loader/index.js??ref--5-0!/Users/zhangtengjin/Desktop/byai/topology/src/lib/utils/index.ts","dependencies":[{"path":"/Users/zhangtengjin/Desktop/byai/topology/src/lib/utils/index.ts","mtime":1647506177154},{"path":"/Users/zhangtengjin/Desktop/byai/topology/package.json","mtime":1647506605470},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/cache-loader/dist/cjs.js","mtime":1645756501487},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/thread-loader/dist/cjs.js","mtime":1645756504722},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-loader/lib/index.js","mtime":1641784542889},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/eslint-loader/index.js","mtime":1643179601592}],"contextDependencies":[],"result":["import _defineProperty from\"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";// import { path } from 'd3-path';\nexport var shouldAutoLayout=function shouldAutoLayout(nodes){if(nodes.length===0){return false;}return!nodes.find(function(item){return!!item.position;});};/** 获取相对画布的坐标 */export var computeCanvasPo=function computeCanvasPo(position,$wrapper){// 当窗口有滚动时，需加上窗口的滚动\nvar rect=$wrapper.getBoundingClientRect();return{x:position.x+$wrapper.scrollLeft+window.pageXOffset-rect.left,y:position.y+$wrapper.scrollTop+window.pageYOffset-rect.top};};/** 计算连接线路径 */export var computeLinePath=function/* istanbul ignore next */computeLinePath(start,end){var lineOffsetY=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;// const svgPath = path();\n// // 直线绘制方式（代码暂时保留）\n// const distance = Math.abs(start.y - end.y) * 0.5 + start.y;\n// const polyLineY = end.y - start.y < 0 ? end.y - 40 : distance;\n// const verticalPolyPoint = {\n//     x: start.x,\n//     y: polyLineY,\n// };\n// const horizontalPolyPoint = {\n//     x: end.x,\n//     y: polyLineY,\n// };\n// // A collection of points for drawing a line\n// const linePoints = [\n//     [{ ...start, y: end.y - start.y < 0 ? start.y - 20 : start.y }, verticalPolyPoint],\n//     [verticalPolyPoint, horizontalPolyPoint],\n//     [horizontalPolyPoint, end],\n// ];\n// // eslint-disable-next-line\n// for (let [startPoint, endPoint] of linePoints) {\n//     svgPath.moveTo(startPoint.x, startPoint.y);\n//     svgPath.lineTo(endPoint.x, endPoint.y);\n// }\n// 弧线绘制方式\nvar x=Math.abs(start.x-end.x);var y=Math.abs(start.y-end.y);if(x===0||y===0){return\"\\n            M \".concat(start.x,\" \").concat(start.y,\"\\n            L \").concat(end.x,\" \").concat(end.y,\"\\n        \");}var dir;var p1;var p2;if(end.y<start.y){var offsetY=80;var offsetX=40;dir=end.x-start.x>0?1:-1;p1=\"\".concat(start.x+dir*offsetX,\", \").concat(start.y+offsetY);p2=\"\".concat(end.x-dir*offsetX,\", \").concat(end.y-offsetY);return\"\\n            M \".concat(start.x,\" \").concat(start.y-lineOffsetY,\"\\n            C \").concat(p1,\" \").concat(p2,\" \").concat(end.x,\" \").concat(end.y,\"\\n        \");}var OffsetXP1=+(1/12*x).toFixed(0);var OffsetXP2=+(11/12*x).toFixed(0);var offsetYP1=+(1/3*y).toFixed(0);var offsetYP2=+(2/3*y).toFixed(0);dir=start.x-end.x>0?-1:1;p1=\"\".concat(start.x+dir*OffsetXP1,\", \").concat(start.y+offsetYP1);p2=\"\".concat(start.x+dir*OffsetXP2,\", \").concat(start.y+offsetYP2);return\"\\n        M \".concat(start.x,\" \").concat(start.y-lineOffsetY,\"\\n        C \").concat(p1,\" \").concat(p2,\" \").concat(end.x,\" \").concat(end.y,\"\\n    \");};/** 计算三角形路径 */export var computeTrianglePath=function computeTrianglePath(start,width){return\"\\n    M \".concat(start.x,\" \").concat(start.y,\"\\n    l \").concat(width/2,\" 0\\n    l \").concat(-width/2,\" \").concat(width,\"\\n    l \").concat(-width/2,\" \").concat(-width,\"\\n    Z\\n\");};export var getNodeSize=function getNodeSize(dom){if(['string','number'].indexOf(typeof dom)>-1){// eslint-disable-next-line no-param-reassign\ndom=document.getElementById(\"dom-map-\".concat(dom));}if(!dom){return{width:0,height:0,left:0,top:0};}return dom.getBoundingClientRect();};export var impactCheck=function impactCheck(point,size,position){var withinX=point.x>=position.x&&point.x<=position.x+size.width;var withinY=point.y>=position.y&&point.y<=position.y+size.height;return withinX&&withinY;};/** 计算锚点位置 */export var computeAnchorPo=function computeAnchorPo(anchor,parentNode){var $anchor=document.getElementById(anchor);if(!$anchor){return null;}var anchorSize=getNodeSize($anchor);var parentSize=getNodeSize(parentNode.id);var parentPosition=parentNode.position||{x:0,y:0};var dX=anchorSize.left-parentSize.left;var dY=anchorSize.top-parentSize.top;var po={x:parentPosition.x+dX+anchorSize.width/2,y:parentPosition.y+dY+anchorSize.height};if(Number.isNaN(po.x)||Number.isNaN(po.y)){return null;}return po;};export var computeMaxAndMin=function computeMaxAndMin(nodes){// @ts-ignore\nif(!nodes.length||nodes.find(function(item){return!item.position||[item.position.x,item.position.y].includes(undefined);})){return null;}var minX=Infinity;var maxX=-Infinity;var minY=Infinity;var maxY=-Infinity;nodes.forEach(function(_ref){var position=_ref.position,id=_ref.id;var nodeSize=getNodeSize(id);var x=position.x,y=position.y;minX=Math.min(minX,x);maxX=Math.max(maxX,x+nodeSize.width);minY=Math.min(minY,y);maxY=Math.max(maxY,y+nodeSize.height);});return{minX:minX,maxX:maxX,minY:minY,maxY:maxY};};export var computeContentCenter=function computeContentCenter(nodes){if(!computeMaxAndMin(nodes))return null;var _computeMaxAndMin=computeMaxAndMin(nodes),minX=_computeMaxAndMin.minX,maxX=_computeMaxAndMin.maxX,minY=_computeMaxAndMin.minY,maxY=_computeMaxAndMin.maxY;return{x:(minX+maxX)/2,y:(minY+maxY)/2};};/**\n * 滚动 Y 轴距离顶部距离\n */export var computeContentPostionY=function computeContentPostionY(nodes){if(!computeMaxAndMin(nodes))return null;var _computeMaxAndMin2=computeMaxAndMin(nodes),minX=_computeMaxAndMin2.minX,maxX=_computeMaxAndMin2.maxX,minY=_computeMaxAndMin2.minY;return{x:(minX+maxX)/2,y:minY};};/** 计算节点连接处 */export var computeNodeInputPo=function computeNodeInputPo(node){var $node=document.getElementById(\"dom-map-\".concat(node.id));if(!$node){return null;}var nodeSize=getNodeSize($node);// eslint-disable-next-line no-param-reassign\nnode.position=node.position||{x:0,y:0};var po={x:node.position.x+nodeSize.width/2,y:node.position.y};if(Number.isNaN(po.x)||Number.isNaN(po.y)){return null;}return po;};/** 计算鼠标相对画布位置 */export var computeMouseClientToCanvas=function computeMouseClientToCanvas(clientX,clientY,$wrapper){var rect=$wrapper.getBoundingClientRect();var dX=clientX-rect.left;var dY=clientY-rect.top;return{x:$wrapper.scrollLeft+dX,y:$wrapper.scrollTop+dY};};export var createHashFromObjectArray=function createHashFromObjectArray(arr,field){return arr.reduce(function(pre,cur){var key=typeof field==='string'?cur[field]:field(cur);return _objectSpread({},pre,_defineProperty({},key,cur));},{});};/**\n * 判断对象是否存在一组 matchKey: matchValue\n * @param obj\n * @param matchKey\n * @param matchValue\n * @returns\n */export var isMatchKeyValue=function isMatchKeyValue(obj,matchKey,matchValue){var isMatch=false;var loop=function loop(param){// eslint-disable-next-line no-restricted-syntax\nfor(var key in param){if(Object.prototype.toString.call(param[key])==='[object Object]'&&param[key]!==null){loop(param[key]);}else{// eslint-disable-next-line no-lonely-if\nif(key===matchKey){isMatch=param[key]===matchValue;}}}};loop(obj);return isMatch;};",{"version":3,"sources":["/Users/zhangtengjin/Desktop/byai/topology/src/lib/utils/index.ts"],"names":["shouldAutoLayout","nodes","length","find","item","position","computeCanvasPo","$wrapper","rect","getBoundingClientRect","x","scrollLeft","window","pageXOffset","left","y","scrollTop","pageYOffset","top","computeLinePath","start","end","lineOffsetY","Math","abs","dir","p1","p2","offsetY","offsetX","OffsetXP1","toFixed","OffsetXP2","offsetYP1","offsetYP2","computeTrianglePath","width","getNodeSize","dom","indexOf","document","getElementById","height","impactCheck","point","size","withinX","withinY","computeAnchorPo","anchor","parentNode","$anchor","anchorSize","parentSize","id","parentPosition","dX","dY","po","Number","isNaN","computeMaxAndMin","includes","undefined","minX","Infinity","maxX","minY","maxY","forEach","nodeSize","min","max","computeContentCenter","computeContentPostionY","computeNodeInputPo","node","$node","computeMouseClientToCanvas","clientX","clientY","createHashFromObjectArray","arr","field","reduce","pre","cur","key","isMatchKeyValue","obj","matchKey","matchValue","isMatch","loop","param","Object","prototype","toString","call"],"mappings":"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","sourcesContent":["// import { path } from 'd3-path';\nimport {\n    IPosition,\n    ITopologyNode,\n} from '../declare';\n\nexport const shouldAutoLayout = (nodes: ITopologyNode[]) => {\n    if (nodes.length === 0) {\n        return false;\n    }\n    return !nodes.find(item => !!item.position);\n};\n\n/** 获取相对画布的坐标 */\nexport const computeCanvasPo = (position: IPosition, $wrapper: HTMLDivElement) => {\n    // 当窗口有滚动时，需加上窗口的滚动\n    const rect = $wrapper.getBoundingClientRect();\n    return {\n        x: position.x + $wrapper.scrollLeft + window.pageXOffset - rect.left,\n        y: position.y + $wrapper.scrollTop + window.pageYOffset - rect.top,\n    } as IPosition;\n};\n\n/** 计算连接线路径 */\nexport const computeLinePath = (start: IPosition, end: IPosition, lineOffsetY: number = 0)/* istanbul ignore next */ => {\n    // const svgPath = path();\n    // // 直线绘制方式（代码暂时保留）\n    // const distance = Math.abs(start.y - end.y) * 0.5 + start.y;\n    // const polyLineY = end.y - start.y < 0 ? end.y - 40 : distance;\n    // const verticalPolyPoint = {\n    //     x: start.x,\n    //     y: polyLineY,\n    // };\n    // const horizontalPolyPoint = {\n    //     x: end.x,\n    //     y: polyLineY,\n    // };\n    // // A collection of points for drawing a line\n    // const linePoints = [\n    //     [{ ...start, y: end.y - start.y < 0 ? start.y - 20 : start.y }, verticalPolyPoint],\n    //     [verticalPolyPoint, horizontalPolyPoint],\n    //     [horizontalPolyPoint, end],\n    // ];\n    // // eslint-disable-next-line\n    // for (let [startPoint, endPoint] of linePoints) {\n    //     svgPath.moveTo(startPoint.x, startPoint.y);\n    //     svgPath.lineTo(endPoint.x, endPoint.y);\n    // }\n    // 弧线绘制方式\n    const x = Math.abs(start.x - end.x);\n    const y = Math.abs(start.y - end.y);\n    if (x === 0 || y === 0) {\n        return `\n            M ${start.x} ${start.y}\n            L ${end.x} ${end.y}\n        `;\n    }\n    let dir: number;\n    let p1: string;\n    let p2: string;\n\n    if (end.y < start.y) {\n        const offsetY = 80;\n        const offsetX = 40;\n        dir = end.x - start.x > 0 ? 1 : -1;\n        p1 = `${start.x + dir * offsetX}, ${start.y + offsetY}`;\n        p2 = `${end.x - dir * offsetX}, ${end.y - offsetY}`;\n        return `\n            M ${start.x} ${start.y - lineOffsetY}\n            C ${p1} ${p2} ${end.x} ${end.y}\n        `;\n    }\n    const OffsetXP1 = +(1 / 12 * x).toFixed(0);\n    const OffsetXP2 = +(11 / 12 * x).toFixed(0);\n    const offsetYP1 = +(1 / 3 * y).toFixed(0);\n    const offsetYP2 = +(2 / 3 * y).toFixed(0);\n    dir = start.x - end.x > 0 ? -1 : 1;\n    p1 = `${start.x + dir * OffsetXP1}, ${start.y + offsetYP1}`;\n    p2 = `${start.x + dir * OffsetXP2}, ${start.y + offsetYP2}`;\n    return `\n        M ${start.x} ${start.y - lineOffsetY}\n        C ${p1} ${p2} ${end.x} ${end.y}\n    `;\n};\n\n/** 计算三角形路径 */\nexport const computeTrianglePath = (start: IPosition, width: number) => `\n    M ${start.x} ${start.y}\n    l ${width / 2} 0\n    l ${-width / 2} ${width}\n    l ${-width / 2} ${-width}\n    Z\n`;\n\nexport const getNodeSize = (dom: string | HTMLElement) => {\n    if (['string', 'number'].indexOf(typeof dom) > -1) {\n        // eslint-disable-next-line no-param-reassign\n        dom = document.getElementById(`dom-map-${dom}`) as HTMLElement;\n    }\n    if (!dom) {\n        return {\n            width: 0,\n            height: 0,\n            left: 0,\n            top: 0,\n        } as ClientRect;\n    }\n    return (dom as HTMLElement).getBoundingClientRect();\n};\n\nexport const impactCheck = (point: IPosition, size: { width: number; height: number }, position: IPosition) => {\n    const withinX = point.x >= position.x && point.x <= position.x + size.width;\n    const withinY = point.y >= position.y && point.y <= position.y + size.height;\n    return withinX && withinY;\n};\n\n/** 计算锚点位置 */\nexport const computeAnchorPo = (anchor: string, parentNode: ITopologyNode) => {\n    const $anchor = document.getElementById(anchor);\n    if (!$anchor) {\n        return null;\n    }\n    const anchorSize = getNodeSize($anchor);\n    const parentSize = getNodeSize(parentNode.id);\n    const parentPosition = parentNode.position || { x: 0, y: 0 };\n    const dX = anchorSize.left - parentSize.left;\n    const dY = anchorSize.top - parentSize.top;\n    const po = {\n        x: parentPosition.x + dX + anchorSize.width / 2,\n        y: parentPosition.y + dY + anchorSize.height,\n    };\n    if (Number.isNaN(po.x) || Number.isNaN(po.y)) {\n        return null;\n    }\n\n    return po;\n};\n\nexport const computeMaxAndMin = (nodes: ITopologyNode[]) => {\n    // @ts-ignore\n    if (!nodes.length || nodes.find(item => !item.position || [item.position.x, item.position.y].includes(undefined))) {\n        return null;\n    }\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    nodes.forEach(({ position, id }) => {\n        const nodeSize = getNodeSize(id);\n        const { x, y } = position;\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x + nodeSize.width);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y + nodeSize.height);\n    });\n    return {\n        minX,\n        maxX,\n        minY,\n        maxY\n    };\n};\n\nexport const computeContentCenter = (nodes: ITopologyNode[]) => {\n    if (!computeMaxAndMin(nodes)) return null;\n    const {\n        minX, maxX, minY, maxY\n    } = computeMaxAndMin(nodes);\n    return {\n        x: (minX + maxX) / 2,\n        y: (minY + maxY) / 2,\n    };\n};\n\n\n/**\n * 滚动 Y 轴距离顶部距离\n */\nexport const computeContentPostionY = (nodes: ITopologyNode[]) => {\n    if (!computeMaxAndMin(nodes)) return null;\n    const {\n        minX, maxX, minY\n    } = computeMaxAndMin(nodes);\n    return {\n        x: (minX + maxX) / 2,\n        y: minY,\n    };\n};\n\n/** 计算节点连接处 */\nexport const computeNodeInputPo = (node: ITopologyNode) => {\n    const $node = document.getElementById(`dom-map-${node.id}`);\n    if (!$node) {\n        return null;\n    }\n    const nodeSize = getNodeSize($node);\n    // eslint-disable-next-line no-param-reassign\n    node.position = node.position || { x: 0, y: 0 };\n    const po = {\n        x: node.position.x + nodeSize.width / 2,\n        y: node.position.y,\n    };\n    if (Number.isNaN(po.x) || Number.isNaN(po.y)) {\n        return null;\n    }\n    return po;\n};\n\n/** 计算鼠标相对画布位置 */\nexport const computeMouseClientToCanvas = (clientX: number, clientY: number, $wrapper: HTMLDivElement) => {\n    const rect = $wrapper.getBoundingClientRect();\n    const dX = clientX - rect.left;\n    const dY = clientY - rect.top;\n    return {\n        x: $wrapper.scrollLeft + dX,\n        y: $wrapper.scrollTop + dY,\n    };\n};\n\ntype GetField = (obj: object) => string;\nexport const createHashFromObjectArray = (arr: object[], field: string | GetField) => arr.reduce(\n    (pre, cur: object) => {\n        const key = typeof field === 'string' ? cur[field] : field(cur);\n        return { ...pre, [key]: cur };\n    },\n    {},\n);\n\n\n/**\n * 判断对象是否存在一组 matchKey: matchValue\n * @param obj\n * @param matchKey\n * @param matchValue\n * @returns\n */\nexport const isMatchKeyValue = (obj, matchKey?, matchValue?) => {\n    let isMatch = false;\n    const loop = (param) => {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const key in param) {\n            if (Object.prototype.toString.call(param[key]) === '[object Object]' && param[key] !== null) {\n                loop(param[key]);\n            } else {\n                // eslint-disable-next-line no-lonely-if\n                if (key === matchKey) {\n                    isMatch = (param[key] === matchValue);\n                }\n            }\n        }\n    };\n    loop(obj);\n    return isMatch;\n};\n"]}]}